language: minimal

stages:
  - name: fast_check
  - name: build_and_pack
    # Avoid duplicate builds for pull requests
    if: type = push OR (type = pull_request AND repo != "fritzing/fritzing-app")
  - name: deploy_to_github
    if: type = push AND branch IN (develop, master) AND repo = "fritzing/fritzing-app"

env:
  global:
    - secure: "R2aZwSFoavU551FUqzr/RCBYPd8eQkKTKOBMGYuZ0yFAr5yK958dwZtQg9rZ7PSpPIJoGIGS3NL7X5UBTLXbWCrgiOla3MCilqbk3r4+HirrkVYQir9C+yPp1z+ZE4jgAFKGz6W9Vc+XFN0Kr1PmyyoTQKe3v6rdfpwOdIzRThY2zO1fSYosirYhRlk/2wfptaW51DF6PcEwD/fR80OKEl+PmO3PFCG68LJmZ8W8Par+8yiCctz7ru+eAZCmEjx1AIrfXy2NWQgoKKdRL+RQKSsXvfioFJy4qa2tpA1QC0BfDLP09oIVXY5Bx4MznaiL+xxCR7gtEddPXEdLo+6RZxq0ujb8WdKhVD+URXoeS2Qrd3xty+TkrNAXSWt0lx17klHUFgRrs7jkaZJj+uo8LcKCt/XYS3QFxrMhoNMN8GCcdplVE2aUmm2QoO2HLJj8IGUm7SCQXbGC7BHLwGTVj/GeKjadQaDYsITNPMk0bg8HJ3q0v/R7bUxuz66vStpw7+Vl2AtVoDkpqRfwB8Ax4lc3mQGwybdIUBmQsfmbVD87dyNfWFjJCkTLnLEWn+erkqBztZ1F0ttPSBBWRaLfL0dWks766ofe8KPvOsh9FimWNo89sWc4Q2kRWBmI1c7SaPwpkhOZB5DeRzSxSZj3j4y5JFHaph7CHx07as4mrtg="
    - secure: "H6j8t7yrolYB7DzoEZ7CiXsVhqPos+z7pMmUGEPaB9/RD0nlple2Zc5Y7tap/giXoIUX7Qm3vBqmWOFV/GNYHjx3B4BjdqBeH5aVrhbHdQYXXGp2PKqKVWZFQ4IkX0J/DtPQHyauBxThbqpoZI1ItUoejuM1nWc5oI1y/usGzzUNAbqCaoY7DlbYfCVaYTWNXf3s493VptQI2X+2KclAIZ3tRUaZTwEX/9LeIMmtCGlphxLZmIXZDBlXjWTzCRS4hNmVyk8ZjxAx5MWrnyxqsMdjinqLjUEXH1VncSDJ1cbmKesAq4dysxEJRR+wOOz3i596PrDfD8E1jPDDJB35ohU7PvmLgGhX2Fk7Gm55NQVoV55dlQcrFPx1cBg/ysQvLCgiD9q9tvtS2w931JQEGFvTuaHu+K/RI7KUb77idf5tCJ54TJeXpULZCqWR3K4QSqRjjZ8OEXLYEwDmZar2TWiPxD53dXVPHb5rS0WMAt1kfGK/DgyikUXb5tRL9vH8TBls2bVz9ig/wrQZE8dWQKiLLIxctoFVpRFjRLSGPMFVbG/x/pa6zghPY1g8y7w36LuIAXJEM+W/P3K/i0Ac/AU9y1g20pVf1WR1GE10xLWlev6KZrHnNTzaCtDvWlqB5btQukVvViWKmDno2vbebu/F7533FdhIiIQKgoZXK2U="

jobs:
  include:
    - stage: fast_check
      name: Shell linter
      language: shell
      script:
        - bash -c 'shopt -s globstar; shellcheck -e SC1117 **/*.sh'

    - stage: fast_check
      name: Fast build
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - docker pull fritzing/build:bionic
      script:
        - docker/build-linux.sh

    - stage: build_and_pack
      name: Xenial
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - tools/aws_tasks.sh setup
        - docker pull fritzing/build:xenial
      script:
        - docker/release-linux.sh xenial $TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.xenial
        - tools/aws_tasks.sh store_with_md5 . fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.xenial.linux.AMD64.tar.bz2

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      name: Bionic
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - tools/aws_tasks.sh setup
        - docker pull fritzing/build:bionic
      script:
        - docker/release-linux.sh bionic $TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.bionic
        - tools/aws_tasks.sh store_with_md5 . fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.bionic.linux.AMD64.tar.bz2

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      name: Fedora
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - tools/aws_tasks.sh setup
        - docker pull fritzing/build:fedora-30
      script:
        - docker/release-linux.sh fedora-30 $TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.fedora-30
        - tools/aws_tasks.sh store_with_md5 . fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.fedora-30.linux.AMD64.tar.bz2

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: osx
      language: cpp
      osx_image: xcode10.2
      cache:
        directories:
          ../libgit2/build

      addons:
        homebrew:
          packages:
          - qt5
          update: false

      before_install:
        - mkdir -p ../libgit2/build
        - wget -q -O - https://github.com/libgit2/libgit2/archive/v0.28.1.tar.gz | tar xz && mv libgit2-0.28.1/* ../libgit2/
        - (cd ../libgit2/build && cmake -D BUILD_SHARED_LIBS=OFF .. && cmake --build .)
        - (cd src/lib && wget -q -O - https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        - tools/aws_tasks.sh setup
      script:
        - ls /usr/local/opt
        - tools/deploy_fritzing_mac.sh
        - mv ../deploy-app/Fritzing.dmg fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.mojave.10.2.dmg
        - tools/aws_tasks.sh store_with_md5 . fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.mojave.10.2.dmg

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: osx
      language: cpp
      osx_image: xcode10.1
      cache:
        directories:
          ../libgit2/build

      addons:
        homebrew:
          packages:
          - qt5
          - md5sha1sum
          update: true

      before_install:
        - mkdir -p ../libgit2/build
        - wget -q -O - https://github.com/libgit2/libgit2/archive/v0.28.1.tar.gz | tar xz && mv libgit2-0.28.1/* ../libgit2/
        - (cd ../libgit2/build && cmake -D BUILD_SHARED_LIBS=OFF .. && cmake --build .)
        - (cd src/lib && wget -q -O - https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        - tools/aws_tasks.sh setup

      script:
        - ls /usr/local/opt
        - tools/deploy_fritzing_mac.sh
        - mv ../deploy-app/Fritzing.dmg fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.high_sierra.10.1.dmg
        - tools/aws_tasks.sh store_with_md5 . fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.high_sierra.10.1.dmg

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: windows
      language: cpp

      before_install:
        - curl -L http://download.qt-project.org/official_releases/online_installers/qt-unified-windows-x86-online.exe --output qt-installer.exe
        - ./qt-installer.exe --script ./tools/qt_installer_noninteractive.qs
        - curl -fsSL https://github.com/libgit2/libgit2/archive/v0.28.1.zip -o libgit2.zip && 7z x libgit2.zip && mv libgit2-0.28.1 ../libgit2
        - (mkdir ../libgit2/build64 && cd ../libgit2/build64 && cmake -G "Visual Studio 15 2017 Win64" .. && cmake --build . --config Release)
        - (cd src/lib && curl -L https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        - tools/aws_tasks.sh setup

      script:
          - tools/build-windows.bat "$TRAVIS_COMMIT"-$TRAVIS_BRANCH-"$TRAVIS_BUILD_NUMBER"
          - tools/aws_tasks.sh store_with_md5 $TRAVIS_BUILD_DIR/../release64 fritzing-$TRAVIS_COMMIT-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER.windows.64.zip

      after_success:
        - tools/aws_tasks.sh synchronize_up

    - stage: deploy_to_github
      before_install:
        - tools/aws_tasks.sh setup
        - tools/aws_tasks.sh synchronize_down
      before_deploy:
        - git config --local user.name "Travis C.D."
        - git config --local user.email "travis@fritzing.org"
        - git tag CD-$TRAVIS_BUILD_NUMBER
      deploy:
        provider: releases
        draft: true
        api_key:
          secure: "ndzX3gAwth3jsLQobNvYZKERGsP6OjsLNIj/CiIw1eGzJn9Di6bB0aksIBiRU8Sp5zGdMUjxiQk/qgZg/vnce+oUiQM8c1PFgGh1b04W57M8NnnGYsfMa9b8kgEzlmlpP4qSD6SlG5FI29JuOAQqQWHD3ywnsy9tiu5dn84k735gLfTnuIzFmQgvl5zil8G2kMSLMY0EIC8bgWbn8JRsEfBqF7FvbJOmmsww/ADRJx2z6iOhOmTu23qZOIq6GNG8MTyp0jW6yZsNP0Nyum966pqsu6cwyHVuXA4iIRBgE1022PoQfN9F7cLiuskl33xbl5FoKQS7iw7W3wUH0vmyd3XuiBBpoDz2A2iPghMS/7Z31T5rCWgWb9SDDelScz3y9ESlabmmOBVEx633eWtrXG5poiMLJshLyR3d+uCm5C5fIyPn++CxwMkBR/anWMJBlCYX8CYSLBJd5Kz+J/vvc6XTgm1D4+oUYBcrhRs3fiRlKY72RHLy8V3b9ji+oIpnz5ZqguSS1WpF74T+zESyb/dtL0dfAewxmQg1XdOzcmRgWP80Uc3Mxb3laImrBJLSPXi0eR0V5Y0n6RVub3FQOhzNx5+s0jaGbzYJJScKC1eOLbupdSuKEUOG5n4I8IsHTzr3EIzhMyI7vSK0w4bKVdSxLYuVcXV8Bf9Kc+7yZvg="
        file_glob: true
        file: $HOME/$TRAVIS_BUILD_NUMBER/*
        skip_cleanup: true
        # We already check the branch in the stage condition
        on:
          all_branches: true

      after_deploy:
        - tools/aws_tasks.sh cleanup
